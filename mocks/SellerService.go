// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	dto "seadeals-backend/dto"

	mock "github.com/stretchr/testify/mock"
)

// SellerService is an autogenerated mock type for the SellerService type
type SellerService struct {
	mock.Mock
}

// FindSellerByID provides a mock function with given fields: sellerID, userID
func (_m *SellerService) FindSellerByID(sellerID uint, userID uint) (*dto.GetSellerRes, error) {
	ret := _m.Called(sellerID, userID)

	var r0 *dto.GetSellerRes
	if rf, ok := ret.Get(0).(func(uint, uint) *dto.GetSellerRes); ok {
		r0 = rf(sellerID, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.GetSellerRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, uint) error); ok {
		r1 = rf(sellerID, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSellerService interface {
	mock.TestingT
	Cleanup(func())
}

// NewSellerService creates a new instance of SellerService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSellerService(t mockConstructorTestingTNewSellerService) *SellerService {
	mock := &SellerService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
