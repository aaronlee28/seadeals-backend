// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "seadeals-backend/model"

	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// DeliveryActivityRepository is an autogenerated mock type for the DeliveryActivityRepository type
type DeliveryActivityRepository struct {
	mock.Mock
}

// CreateActivity provides a mock function with given fields: tx, deliveryID, description
func (_m *DeliveryActivityRepository) CreateActivity(tx *gorm.DB, deliveryID uint, description string) (*model.DeliveryActivity, error) {
	ret := _m.Called(tx, deliveryID, description)

	var r0 *model.DeliveryActivity
	if rf, ok := ret.Get(0).(func(*gorm.DB, uint, string) *model.DeliveryActivity); ok {
		r0 = rf(tx, deliveryID, description)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.DeliveryActivity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gorm.DB, uint, string) error); ok {
		r1 = rf(tx, deliveryID, description)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewDeliveryActivityRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeliveryActivityRepository creates a new instance of DeliveryActivityRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeliveryActivityRepository(t mockConstructorTestingTNewDeliveryActivityRepository) *DeliveryActivityRepository {
	mock := &DeliveryActivityRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
