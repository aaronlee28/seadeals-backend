// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	dto "seadeals-backend/dto"

	mock "github.com/stretchr/testify/mock"
)

// SealabsPayService is an autogenerated mock type for the SealabsPayService type
type SealabsPayService struct {
	mock.Mock
}

// CreateSignature provides a mock function with given fields: req
func (_m *SealabsPayService) CreateSignature(req *dto.SeaDealspayReq) string {
	ret := _m.Called(req)

	var r0 string
	if rf, ok := ret.Get(0).(func(*dto.SeaDealspayReq) string); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewSealabsPayService interface {
	mock.TestingT
	Cleanup(func())
}

// NewSealabsPayService creates a new instance of SealabsPayService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSealabsPayService(t mockConstructorTestingTNewSealabsPayService) *SealabsPayService {
	mock := &SealabsPayService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
