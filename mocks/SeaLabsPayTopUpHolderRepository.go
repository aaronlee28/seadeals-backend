// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "seadeals-backend/model"

	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// SeaLabsPayTopUpHolderRepository is an autogenerated mock type for the SeaLabsPayTopUpHolderRepository type
type SeaLabsPayTopUpHolderRepository struct {
	mock.Mock
}

// CreateTopUpHolder provides a mock function with given fields: _a0, _a1
func (_m *SeaLabsPayTopUpHolderRepository) CreateTopUpHolder(_a0 *gorm.DB, _a1 *model.SeaLabsPayTopUpHolder) (*model.SeaLabsPayTopUpHolder, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.SeaLabsPayTopUpHolder
	if rf, ok := ret.Get(0).(func(*gorm.DB, *model.SeaLabsPayTopUpHolder) *model.SeaLabsPayTopUpHolder); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.SeaLabsPayTopUpHolder)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gorm.DB, *model.SeaLabsPayTopUpHolder) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTopUpHolder provides a mock function with given fields: tx, txnID, status
func (_m *SeaLabsPayTopUpHolderRepository) UpdateTopUpHolder(tx *gorm.DB, txnID uint, status string) (*model.SeaLabsPayTopUpHolder, error) {
	ret := _m.Called(tx, txnID, status)

	var r0 *model.SeaLabsPayTopUpHolder
	if rf, ok := ret.Get(0).(func(*gorm.DB, uint, string) *model.SeaLabsPayTopUpHolder); ok {
		r0 = rf(tx, txnID, status)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.SeaLabsPayTopUpHolder)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gorm.DB, uint, string) error); ok {
		r1 = rf(tx, txnID, status)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSeaLabsPayTopUpHolderRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSeaLabsPayTopUpHolderRepository creates a new instance of SeaLabsPayTopUpHolderRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSeaLabsPayTopUpHolderRepository(t mockConstructorTestingTNewSeaLabsPayTopUpHolderRepository) *SeaLabsPayTopUpHolderRepository {
	mock := &SeaLabsPayTopUpHolderRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
