// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "seadeals-backend/model"

	mock "github.com/stretchr/testify/mock"
)

// SocialGraphService is an autogenerated mock type for the SocialGraphService type
type SocialGraphService struct {
	mock.Mock
}

// FollowToSeller provides a mock function with given fields: userID, sellerID
func (_m *SocialGraphService) FollowToSeller(userID uint, sellerID uint) (*model.SocialGraph, error) {
	ret := _m.Called(userID, sellerID)

	var r0 *model.SocialGraph
	if rf, ok := ret.Get(0).(func(uint, uint) *model.SocialGraph); ok {
		r0 = rf(userID, sellerID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.SocialGraph)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, uint) error); ok {
		r1 = rf(userID, sellerID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSocialGraphService interface {
	mock.TestingT
	Cleanup(func())
}

// NewSocialGraphService creates a new instance of SocialGraphService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSocialGraphService(t mockConstructorTestingTNewSocialGraphService) *SocialGraphService {
	mock := &SocialGraphService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
